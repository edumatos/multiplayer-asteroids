package {	import flash.display.MovieClip	import flash.text.TextField	public class Ship extends MovieClip{		private var last:Number;				public var X:Number		public var Y:Number		public var XSpeed:Number = 0;		public var YSpeed:Number = 0;		public var RotSpeed:Number = 0;		public var Angle:Number = 0;		public var AccMod:int;		public var RotMod:int;		public var Id:String;		public var Title:String		public var XP:int = 0		private var rottrust:Number = 0;		private var xtrust:Number = 0;		private var ytrust:Number = 0;		private var intertia:Number = 4		private var drag:Number = 0.0015		private var ePower:Number = 1/1000;		private var rPower:Number = 1/1000;		public var Kills:Number = 0;		public var Deaths:Number = 0;				function Ship(id:String, title:String, kills:Number, deaths:Number, xp:int){			this.XP = xp			this.Id = id;			this.Title = title;			this.title.text = title			this.X = x			this.Y = y			this.Kills = kills			this.Deaths = deaths			visible = false		}						public function get Dead():Boolean{			return !this.visible		}				public function Die():void{			this.visible = false		}				public function Spawn():void{			this.visible = true		}				public function Teleport(x:Number, y:Number):void{			this.x = X = x			this.y = Y = y		}				public function Rotate(modifier:int):void{			RotMod = modifier;		}				public function Accelerate(modifier:int):void{			AccMod = modifier;		}				public function SetState(t:Number, x:Number, y:Number, xSpeed:Number, ySpeed:Number, rotSpeed:Number, angle:Number, accMod:int, rotMod:int):void{			last = t;			X = x			Y = y			XSpeed = xSpeed			YSpeed = ySpeed			RotSpeed = rotSpeed			Angle = angle			AccMod = accMod			RotMod = rotMod		}				public function Blink():void{			ship.gotoAndPlay(2);		}				public function Tick(time:Number):void{			if(!last) last = time			//			var time:Number = new Date().getTime();			var offset = Math.min( time - last, 5000);						rottrust = (RotMod * rPower)/intertia			xtrust = (Math.cos(Angle)*AccMod * ePower)/intertia			ytrust = (Math.sin(Angle)*AccMod * ePower)/intertia			var dragmod:Number = (1-drag)						for( var a:int=0;a<offset;a++){								XSpeed += xtrust;				YSpeed += ytrust;								if( RotMod ){					RotSpeed += rottrust;				}else if( RotSpeed ){					RotSpeed += (rPower * -(Math.abs(RotSpeed)/RotSpeed))/intertia				}								X += XSpeed;				Y += YSpeed;				Angle += RotSpeed								if(Math.abs(RotSpeed) > .002 ) RotSpeed = (Math.abs(RotSpeed)/RotSpeed) * 0.002								XSpeed *= dragmod				YSpeed *= dragmod				RotSpeed *= dragmod			}						this.x = X			this.y = Y			ship.rotation = 180/Math.PI * Angle			last = time;		}	}}